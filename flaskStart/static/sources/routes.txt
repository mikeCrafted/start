[[ index_route_start ]]
@app.route('/')
def index():
	return render_template('index.html')
[[ index_route_end ]]

[[ index_route_empty_start ]]
@app.route('/')
def index():
	return '<h1>Hello World!</h1>'
[[ index_route_empty_end ]]

[[ logout_route_start ]]
@app.route("/logout")
def logout():
    logout_user()
    return redirect(url_for('index'))
[[ logout_route_end ]]

[[ login_route_start ]]
@app.route("/login", methods = ['GET', 'POST'])
def login():
    if current_user.is_authenticated:
        return redirect(url_for('index'))
    form = LoginForm()
    if form.validate_on_submit():
        user = User.query.filter_by(email = form.email.data).first()
        if user and bcrypt.check_password_hash(user.password, form.password.data):
            login_user(user)
            next_page = request.args.get('next')
            return redirect(next_page) if next_page else redirect(url_for('index'))
        else:
            flash('Login Unsuccessful. Please check email and password', 'danger')
    return render_template('login.html', title = 'Login', form = form)
[[ login_route_end ]]

[[ register_route_start ]]
@app.route("/register", methods=['GET', 'POST'])
def register():
    if current_user.is_authenticated:
        return redirect(url_for('index'))
    form = RegistrationForm()
    if form.validate_on_submit():
        hashed_password = bcrypt.generate_password_hash(form.password.data).decode('utf-8')
        user = User(username = form.username.data, email = form.email.data, password = hashed_password)
        db.session.add(user)
        db.session.commit()
        flash('Your account has been created! You are now able to log in!', 'success')
        return redirect(url_for('login'))
    return render_template('register.html', title = 'Register', form = form)
[[ register_route_end ]]